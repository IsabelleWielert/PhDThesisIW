function phy_power_aliased = aliased_Lorentzian(param, f)

%D is the difussion constant and f_c is the corner frequency
D = param(1);
f_c = param(2);

index_max = length(f);
n_max = 100;
phy_power_aliased(1) = 0; 
for index=1:index_max;
    %real_gamma is the real part and im_gamma is the imaginary part of the ratio gamma/gamma_0; here is gamma
    %the Faxen's firction coefficient and gamma_0 is the stokes friction
    real_gamma = 1 + sqrt(f(index)/f_nü) - 3*R/(16*l) + 3*R/(4*l)*exp(-2*l/R*sqrt(f(index)/f_nü))*cos(2*l/R*sqrt(f(index)/f_nü));
    im_gamma = -sqrt(f(index)/f_nü) + 3*R/(4*l)*exp(-2*l/R*sqrt(f(index)/f_nü))*sin(2*l/R*sqrt(f(index)/f_nü));
    %power_lorentz(index) = D/(pi^2*(f_c^2+f(index)^2));
    
    for n=-n_max:n_max;
        phy_power_aliased(index) = phy_power_aliased(index) + D/(2*pi^2)*real_gamma/((f_c + (f(index)+ n*f_s)*im_gamma-(f(index)+ n*f_s)*^2/f_m)^2 + ((f(index)+ n*f_s)*real_gamma)^2);
    end  
end

end